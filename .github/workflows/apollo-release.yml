name: FD-apollo-release-neutron-clang-10032024

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE_1:
        description: 'Kernel Tree 1'
        default: 'https://github.com/sunsky131221/kernel_sm8250'
        required: true
      KERNEL_TREE_BRANCH_1:
        description: 'Kernel Tree Branch 1'
        default: 'next-susfs'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'apollo'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/re-noroi/anykernel3-test'
        required: false
      CUSTOM_SED:
        description: 'Custom Kernel Version'
        default: '-FakeDreamer'
        required: false

jobs:
  build:
    strategy:
      matrix:
        kernel: [1]
        type: [original, modified]
    runs-on: ubuntu-latest
    env:
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
          mkdir clang
          unzstd -d clang.tar.zst
          tar -xf clang.tar -C clang
          
      - name: Set Kernel Environment Variables
        run: |
          echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_1 }}" >> $GITHUB_ENV
          case "${{ matrix.kernel }}" in
            1) echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_1 }}" >> $GITHUB_ENV ;;
          esac
         
      - name: Checkout Kernel
        run: git clone --depth=1 $KERNEL_TREE -b $KERNEL_TREE_BRANCH kernel_tree

      - name: Kernel Version
        run: |
          cd kernel_tree
          wget https://raw.githubusercontent.com/sunsky131221/Git-KBuild/refs/heads/main/apollo_defconfig -O arch/arm64/configs/vendor/apollo_defconfig
          if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FakeDreamer" ]]; then
            sed -i -e 's/CONFIG_LOCALVERSION="-FakeDreamer"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/apollo_defconfig
          fi
      - name: Apply Patches
        run: |
          cd kernel_tree
          bash nextpatch.sh
      - name: Apply Modifications (if modified build)
        if: matrix.type == 'modified'
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <700>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <154>;/qcom,mdss-pan-physical-height-dimension = <1540>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-j3s-37-02-0a-dsc-video.dtsi
      
      - name: Build Kernel
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="renoroi"
          export KBUILD_BUILD_HOST="dreamstate"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          cd kernel_tree
          make O=out vendor/apollo_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          if [[ "${{ matrix.type }}" == "original" ]]; then
            mv out/arch/arm64/boot/dtbo.img ../apollo-aosp-dtbo.img
            mv out/arch/arm64/boot/dtb.img ../apollo-normal-dtb
            cp out/arch/arm64/boot/Image.gz ../Image.gz
          else
            mv out/arch/arm64/boot/dtbo.img ../apollo-miui-dtbo.img
            mv out/arch/arm64/boot/dtb.img ../apollo-effcpu-dtb
          fi

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-${{ matrix.type }}
          path: |
            apollo-aosp-dtbo.img
            apollo-miui-dtbo.img
            apollo-normal-dtb
            apollo-effcpu-dtb
            Image.gz

  package_anykernel:
    needs: build
    strategy:
      matrix:
        kernel: [1]
    runs-on: ubuntu-latest

    steps:
      - name: Download Kernel Build Original
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-original
          path: kernel-${{ matrix.kernel }}-original

      - name: Download Kernel Build Modified
        uses: actions/download-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-modified
          path: kernel-${{ matrix.kernel }}-modified

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b apollo AnyKernel3-${{ matrix.kernel }}

      - name: Move Kernel Files to AnyKernel3
        run: |
          mv kernel-${{ matrix.kernel }}-original/* AnyKernel3-${{ matrix.kernel }}/
          mv kernel-${{ matrix.kernel }}-modified/* AnyKernel3-${{ matrix.kernel }}/

      - name: Define ZIP Name
        run: |
          COMPILED_DATE=$(date +%Y%m%d)
          if [[ "${{ matrix.kernel }}" == "1" ]]; then
            echo "ZIP_NAME=[FD-][next-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          elif [[ "${{ matrix.kernel }}" == "2" ]]; then
            echo "ZIP_NAME=[FD-][susfs-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          else
            echo "ZIP_NAME=[FD-][noksu-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          fi
      
      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: |
            AnyKernel3-${{ matrix.kernel }}/
            !AnyKernel3-${{ matrix.kernel }}/.git
            !AnyKernel3-${{ matrix.kernel }}/.github
      
